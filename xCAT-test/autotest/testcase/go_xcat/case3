start:go_xcat_devel_from_repo
description:test go-xcat devel on a newly provisioned node
label:go_xcat
os:Linux

#Remove compute node reference to service node
cmd:chdef -t node -o $$CN servicenode= monserver=$$MN nfsserver=$$MN tftpserver=$$MN xcatmaster=$$MN
check:rc==0

#Provision compute node
cmd:/opt/xcat/share/xcat/tools/autotest/testcase/commoncmd/retry_install.sh $$CN __GETNODEATTR($$CN,os)__-__GETNODEATTR($$CN,arch)__-install-compute 2
check:rc==0
check:output=~Provision node\(s\)\: $$CN
cmd:lsdef -l $$CN | grep status
check:output=~booted

#Copy go-xcat script
cmd:xdsh $$CN "cd /; scp -r $$MN:/opt/xcat/share/xcat/tools/go-xcat ./"
check:rc==0

#Install additional packages on Red Hat and Rocky
cmd:if xdsh $$CN "grep \"Red Hat\|Rocky\" /etc/*release >/dev/null"; then xdsh $$CN "yum install -y yum-utils dnf-utils bzip2"; fi

#Install additional packages on Ubuntu
cmd:if xdsh $$CN "grep \"Ubuntu\" /etc/*release >/dev/null"; then xdsh $$CN "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"; fi

#Replace sources.list file on Ubuntu
cmd:if grep Ubuntu /etc/*release;then code=`lsb_release -sc` && xdsh $$CN "scp -r $$MN:/opt/xcat/share/xcat/tools/autotest/testcase/go_xcat/$code-__GETNODEATTR($$CN,arch)__.sources.list /etc/apt/sources.list"; fi

#Set flag to accept install dependent packages by default on Ubuntu
cmd:if grep Ubuntu /etc/*release;then arc_all=`uname -a`; if [[ $arc_all =~ "x86_64" ]]; then xdsh $$CN "echo '* libraries/restart-without-asking boolean true' | debconf-set-selections"; fi; fi

#Install devel version of xCAT. If first attempt fails, try again
cmd:xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y install"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT installed successfully first time"; else echo "First attempt to install xCAT failed, attempting to install xCAT again"; xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y install"; fi

cmd:xdsh $$CN "source /etc/profile.d/xcat.sh; lsxcatd -v"
check:output=~Version
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running

#Uninstall xCAT, then install again and verify public keys
cmd:xdsh $$CN "cd /; ./go-xcat -y completely uninstall"
check:rc==0
check:output=~xCAT has been uninstalled

#Remove --nogpgcheck (yum/dnf) --no-gpg-checks (zypper) and --allow-unauthenticated (apt-get) flags from go-xcat 
# to install xCAT public key when installing packages
cmd:xdsh $$CN "sed -i 's/\-\-nogpgcheck//g' /go-xcat"
cmd:xdsh $$CN "sed -i 's/\-\-no\-gpg\-checks//g' /go-xcat"
cmd:xdsh $$CN "sed -i 's/\-\-allow\-unauthenticated//g' /go-xcat"

#Install devel version of xCAT. If first attempt fails, try again
cmd:xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y install"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT installed successfully first time"; else echo "First attempt to install xCAT failed, attempting to install xCAT again"; xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y install"; fi

cmd:xdsh $$CN "source /etc/profile.d/xcat.sh; lsxcatd -v"
check:output=~Version
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running

#Verify xCAT public key was installed
cmd:if [[ "$$OS" =~ "ubuntu" ]]; then xdsh $$CN "apt-key list"; else xdsh $$CN "rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'"; fi
check:output=~xCAT Automatic Signing Key

#Remove public key on non-Ubuntu system. It was installed during go-xcat RPM installs
cmd:if [[ "$$OS" != "ubuntu" ]]; then xdsh $$CN "rpm -e gpg-pubkey-ca548a47-5b2c830b"; fi

cmd:xdsh $$CN "service xcatd stop"
end

start:go_xcat_stable_from_repo
description:test go-xcat GA on a newly provisioned node
label:go_xcat
os:Linux

#Remove compute node reference to service node
cmd:chdef -t node -o $$CN servicenode= monserver=$$MN nfsserver=$$MN tftpserver=$$MN xcatmaster=$$MN
check:rc==0

#Provision compute node
cmd:/opt/xcat/share/xcat/tools/autotest/testcase/commoncmd/retry_install.sh $$CN __GETNODEATTR($$CN,os)__-__GETNODEATTR($$CN,arch)__-install-compute 2
check:rc==0
check:output=~Provision node\(s\)\: $$CN
cmd:lsdef -l $$CN | grep status
check:output=~booted

#Copy go-xcat script
cmd:xdsh $$CN "cd /; scp -r $$MN:/opt/xcat/share/xcat/tools/go-xcat ./"
check:rc==0

#Install additional packages on Red Hat and Rocky
cmd:if xdsh $$CN "grep \"Red Hat\|Rocky\" /etc/*release >/dev/null"; then xdsh $$CN "yum install -y yum-utils dnf-utils bzip2"; fi

#Install additional packages on Ubuntu
cmd:if xdsh $$CN "grep \"Ubuntu\" /etc/*release >/dev/null"; then xdsh $$CN "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"; fi

#Replace sources.list file on Ubuntu
cmd:if grep Ubuntu /etc/*release;then code=`lsb_release -sc` && xdsh $$CN "scp -r $$MN:/opt/xcat/share/xcat/tools/autotest/testcase/go_xcat/$code-__GETNODEATTR($$CN,arch)__.sources.list /etc/apt/sources.list"; fi

#Set flag to accept install dependent packages by default on Ubuntu
cmd:if grep Ubuntu /etc/*release;then arc_all=`uname -a`; if [[ $arc_all =~ "x86_64" ]]; then xdsh $$CN "echo '* libraries/restart-without-asking boolean true' | debconf-set-selections"; fi; fi

#Install GA version of xCAT. If first attempt fails, try again
cmd:xdsh $$CN "cd /; ./go-xcat -y install"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT installed successfully first time"; else echo "First attempt to install xCAT failed, attempting to install xCAT again"; xdsh $$CN "cd /; ./go-xcat -y install"; fi

cmd:xdsh $$CN "source /etc/profile.d/xcat.sh;lsxcatd -v"
check:output=~Version
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running
cmd:xdsh $$CN "service xcatd stop"
end

start:go_xcat_stable_from_repo_upgrade
description:test go-xcat GA on a newly provisioned node upgrade to devel
label:go_xcat
os:Linux

#Remove compute node reference to service node
cmd:chdef -t node -o $$CN servicenode= monserver=$$MN nfsserver=$$MN tftpserver=$$MN xcatmaster=$$MN
check:rc==0

#Provision compute node
cmd:/opt/xcat/share/xcat/tools/autotest/testcase/commoncmd/retry_install.sh $$CN __GETNODEATTR($$CN,os)__-__GETNODEATTR($$CN,arch)__-install-compute 2
check:rc==0
check:output=~Provision node\(s\)\: $$CN
cmd:lsdef -l $$CN | grep status
check:output=~booted

#Copy go-xcat script
cmd:xdsh $$CN "cd /; scp -r $$MN:/opt/xcat/share/xcat/tools/go-xcat ./"
check:rc==0

#Install additional packages on Red Hat and Rocky
cmd:if xdsh $$CN "grep \"Red Hat\|Rocky\" /etc/*release >/dev/null"; then xdsh $$CN "yum install -y yum-utils dnf-utils bzip2"; fi

#Install additional packages on Ubuntu
cmd:if xdsh $$CN "grep \"Ubuntu\" /etc/*release >/dev/null"; then xdsh $$CN "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"; fi

#Replace sources.list file on Ubuntu
cmd:if grep Ubuntu /etc/*release;then code=`lsb_release -sc` && xdsh $$CN "scp -r $$MN:/opt/xcat/share/xcat/tools/autotest/testcase/go_xcat/$code-__GETNODEATTR($$CN,arch)__.sources.list /etc/apt/sources.list"; fi

#Set flag to accept install dependent packages by default on Ubuntu
cmd:if grep Ubuntu /etc/*release;then arc_all=`uname -a`; if [[ $arc_all =~ "x86_64" ]]; then xdsh $$CN "echo '* libraries/restart-without-asking boolean true' | debconf-set-selections"; fi; fi

#Install GA version of xCAT. If first attempt fails, try again
cmd:xdsh $$CN "cd /; ./go-xcat -y install"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT installed successfully first time"; else echo "First attempt to install xCAT failed, attempting to install xCAT again"; xdsh $$CN "cd /; ./go-xcat -y install"; fi

cmd:xdsh $$CN "source /etc/profile.d/xcat.sh;lsxcatd -v"
check:output=~Version
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running

#Update to devel version of xCAT
cmd:xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y update"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT updated successfully first time"; else echo "First attempt to update xCAT failed, attempting to update xCAT again"; xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y update"; fi
check:output=~xCAT updated successfully first time|xCAT has been successfully updated
cmd:xdsh $$CN "source /etc/profile.d/xcat.sh;lsxcatd -v"
check:rc==0
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running
cmd:xdsh $$CN "service xcatd stop"
end

start:go_xcat_stable_from_repo_reinstall_devel
description:test go-xcat GA on a newly provisioned node, remove, install devel
label:go_xcat
os:Linux

#Remove compute node reference to service node
cmd:chdef -t node -o $$CN servicenode= monserver=$$MN nfsserver=$$MN tftpserver=$$MN xcatmaster=$$MN
check:rc==0

#Provision compute node
cmd:/opt/xcat/share/xcat/tools/autotest/testcase/commoncmd/retry_install.sh $$CN __GETNODEATTR($$CN,os)__-__GETNODEATTR($$CN,arch)__-install-compute 2
check:rc==0
check:output=~Provision node\(s\)\: $$CN
cmd:lsdef -l $$CN | grep status
check:output=~booted

#Copy go-xcat script
cmd:xdsh $$CN "cd /; scp -r $$MN:/opt/xcat/share/xcat/tools/go-xcat ./"
check:rc==0

#Install additional packages on Red Hat and Rocky
cmd:if xdsh $$CN "grep \"Red Hat\|Rocky\" /etc/*release >/dev/null"; then xdsh $$CN "yum install -y yum-utils dnf-utils bzip2"; fi

#Install additional packages on Ubuntu
cmd:if xdsh $$CN "grep \"Ubuntu\" /etc/*release >/dev/null"; then xdsh $$CN "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"; fi

#Replace sources.list file on Ubuntu
cmd:if grep Ubuntu /etc/*release;then code=`lsb_release -sc` && xdsh $$CN "scp -r $$MN:/opt/xcat/share/xcat/tools/autotest/testcase/go_xcat/$code-__GETNODEATTR($$CN,arch)__.sources.list /etc/apt/sources.list"; fi

#Set flag to accept install dependent packages by default on Ubuntu
cmd:if grep Ubuntu /etc/*release;then arc_all=`uname -a`; if [[ $arc_all =~ "x86_64" ]]; then xdsh $$CN "echo '* libraries/restart-without-asking boolean true' | debconf-set-selections"; fi; fi

#Install GA version of xCAT. If first attempt fails, try again
cmd:xdsh $$CN "cd /; ./go-xcat -y install"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT installed successfully first time"; else echo "First attempt to install xCAT failed, attempting to install xCAT again"; xdsh $$CN "cd /; ./go-xcat -y install"; fi

cmd:xdsh $$CN "source /etc/profile.d/xcat.sh;lsxcatd -v"
check:output=~Version
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running

#Uninstall xCAT
cmd:xdsh $$CN "cd /; ./go-xcat -y completely uninstall"
check:rc==0
cmd:xdsh $$CN "service xcatd status"
check:rc!=0
check:output=~could not be found|dead|no such service xcatd

#Install devel version of xCAT
cmd:xdsh $$CN "cd /; ./go-xcat --xcat-version=devel -y install"
cmd:version=`xdsh $$CN /opt/xcat/bin/lsxcatd -v`; if [[ $version =~ "Version" ]]; then echo "xCAT installed successfully first time"; else echo "First attempt to install xCAT failed, attempting to install xCAT again"; xdsh $$CN "cd /; ./go-xcat -y --xcat-version=devel install"; fi
check:output=~xCAT installed successfully first time|xCAT has been installed
cmd:xdsh $$CN "source /etc/profile.d/xcat.sh;lsxcatd -a"
check:rc==0
cmd:xdsh $$CN "service xcatd status"
check:rc==0
check:output=~running
cmd:xdsh $$CN "service xcatd stop"
end
